{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\PruebaConceptoCognito\\\\Worn-Off-Keys-Cognito-Tutorials\\\\1-Cognito-Signup\\\\src\\\\components\\\\account.js\";\nimport React, { createContext } from \"react\";\nimport { CognitoUser, AuthenticationDetails } from \"amazon-cognito-identity-js\";\nimport UserPool from \"../UserPool\";\nconst AccountContext = createContext();\n\nconst Account = props => {\n  const getSession = async () => await new Promise((resolve, reject) => {\n    const user = UserPool.getCurrentUser();\n\n    if (user) {\n      user.getSession(async (err, session) => {\n        if (err) {\n          reject();\n        } else {\n          const attributes = await new Promise((resolve, reject) => {\n            user.getUserAttributes((err, attributes) => {\n              if (err) {\n                reject(err);\n              } else {\n                const results = {};\n\n                for (let attribute of attributes) {\n                  const {\n                    Name,\n                    Value\n                  } = attribute;\n                  results[Name] = Value;\n                }\n\n                resolve(results);\n              }\n            });\n          });\n          resolve({\n            user,\n            ...session,\n            ...attributes\n          });\n        }\n      });\n    } else {\n      reject();\n    }\n  });\n\n  const authenticate = async (Username, Password) => await new Promise((resolve, reject) => {\n    const user = new CognitoUser({\n      Username,\n      UserPool\n    });\n    const authDetails = new AuthenticationDetails({\n      Username,\n      Password\n    });\n    user.authenticateUser(authDetails, {\n      onSuccess: data => {\n        console.log(\"onSuccess:\", data);\n        resolve(data);\n      },\n      onFailure: err => {\n        console.error(\"onFailure:\", err);\n        reject(err);\n      },\n      newPasswordRequired: data => {\n        console.log(\"newPasswordRequired:\", data);\n        resolve(data);\n      }\n    });\n  });\n\n  const logout = () => {\n    const user = Pool.getCurrentUser();\n\n    if (user) {\n      user.signOut();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(AccountContext.Provider, {\n    value: {\n      authenticate,\n      getSession,\n      logout\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport { Account, AccountContext };","map":{"version":3,"sources":["C:/Users/DELL/Desktop/PruebaConceptoCognito/Worn-Off-Keys-Cognito-Tutorials/1-Cognito-Signup/src/components/account.js"],"names":["React","createContext","CognitoUser","AuthenticationDetails","UserPool","AccountContext","Account","props","getSession","Promise","resolve","reject","user","getCurrentUser","err","session","attributes","getUserAttributes","results","attribute","Name","Value","authenticate","Username","Password","authDetails","authenticateUser","onSuccess","data","console","log","onFailure","error","newPasswordRequired","logout","Pool","signOut","children"],"mappings":"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","sourcesContent":["import React, { createContext } from \"react\";\r\nimport { CognitoUser, AuthenticationDetails } from \"amazon-cognito-identity-js\";\r\nimport UserPool from \"../UserPool\";\r\n\r\nconst AccountContext = createContext();\r\n\r\nconst Account = props => {\r\n  const getSession = async () =>\r\n    await new Promise((resolve, reject) => {\r\n      const user = UserPool.getCurrentUser();\r\n      if (user) {\r\n        user.getSession(async (err, session) => {\r\n          if (err) {\r\n            reject();\r\n          } else {\r\n            const attributes = await new Promise((resolve, reject) => {\r\n              user.getUserAttributes((err, attributes) => {\r\n                if (err) {\r\n                  reject(err);\r\n                } else {\r\n                  const results = {};\r\n\r\n                  for (let attribute of attributes) {\r\n                    const { Name, Value } = attribute;\r\n                    results[Name] = Value;\r\n                  }\r\n\r\n                  resolve(results);\r\n                }\r\n              });\r\n            });\r\n\r\n            resolve({\r\n              user,\r\n              ...session,\r\n              ...attributes\r\n            });\r\n          }\r\n        });\r\n      } else {\r\n        reject();\r\n      }\r\n    });\r\n\r\n  const authenticate = async (Username, Password) =>\r\n    await new Promise((resolve, reject) => {\r\n      const user = new CognitoUser({ Username, UserPool });\r\n      const authDetails = new AuthenticationDetails({ Username, Password });\r\n\r\n      user.authenticateUser(authDetails, {\r\n        onSuccess: data => {\r\n          console.log(\"onSuccess:\", data);\r\n          resolve(data);\r\n        },\r\n\r\n        onFailure: err => {\r\n          console.error(\"onFailure:\", err);\r\n          reject(err);\r\n        },\r\n\r\n        newPasswordRequired: data => {\r\n          console.log(\"newPasswordRequired:\", data);\r\n          resolve(data);\r\n        }\r\n      });\r\n    });\r\n\r\n  const logout = () => {\r\n    const user = Pool.getCurrentUser();\r\n    if (user) {\r\n      user.signOut();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AccountContext.Provider\r\n      value={{\r\n        authenticate,\r\n        getSession,\r\n        logout\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AccountContext.Provider>\r\n  );\r\n};\r\n\r\nexport {Account, AccountContext};\r\n"]},"metadata":{},"sourceType":"module"}